package com.traffic_stream.dashboard.repository;

import com.traffic_stream.dashboard.entity.TrafficMetric;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;

import java.time.Instant;
import java.util.List;

public interface TrafficMetricRepository extends JpaRepository<TrafficMetric, Long> {
    // üîπ L·∫•y d·ªØ li·ªáu theo areaId
    TrafficMetric findTopByAreaIdOrderByTimestampDesc(String areaId);

    // üîπ L·∫•y d·ªØ li·ªáu theo areaId (m·ªõi nh·∫•t tr∆∞·ªõc)
    List<TrafficMetric> findByAreaIdOrderByTimestampDesc(String areaId, Pageable pageable);

    // üîπ L·∫•y t·∫•t c·∫£ d·ªØ li·ªáu, s·∫Øp x·∫øp theo th·ªùi gian gi·∫£m d·∫ßn
    List<TrafficMetric> findAllByOrderByTimestampDesc(Pageable pageable);

    // üîπ L·∫•y d·ªØ li·ªáu theo kho·∫£ng th·ªùi gian v√† areaId
    List<TrafficMetric> findByAreaIdAndTimestampBetween(String areaId, Instant from, Instant to);

    // üîπ L·∫•y to√†n b·ªô d·ªØ li·ªáu trong kho·∫£ng th·ªùi gian (n·∫øu kh√¥ng filter area)
    List<TrafficMetric> findByTimestampBetween(Instant from, Instant to);
}
